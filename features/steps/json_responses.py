import trafaret as t

User = t.Dict({
  t.Key("firstName"): t.String(allow_blank=True),
  t.Key("lastName"): t.String(allow_blank=True),
  t.Key("active"): t.Int,
  t.Key("id"): t.Int,
  t.Key("partner_id"): t.Int,
  t.Key("partner_user_id"): t.String,
  t.Key("email"): t.String(allow_blank=True),
  t.Key("phone"): t.String(allow_blank=True),
  t.Key("nickname"): (t.String | t.Null),
  t.Key("location"): (t.String | t.Null),
  t.Key("bday_day"): (t.Int | t.Null),
  t.Key("bday_month"): (t.Int | t.Null),
  t.Key("bday_year"): (t.Int | t.Null),
  t.Key("gender"): t.Int(),
  t.Key("pin"): t.String(allow_blank=True),
  t.Key("about"): (t.String | t.Null),
  t.Key("avatar_id"): t.Null,
  t.Key("twitter"): (t.String | t.Null),
  t.Key("facebook"): (t.String | t.Null),
  t.Key("google"): (t.String | t.Null),
  t.Key("linkedin"): (t.String | t.Null),
  t.Key("youtube"): (t.String | t.Null),
  t.Key("ts_created"): t.String(),
  t.Key("ts_updated"): t.String(),
  t.Key("address_1"): (t.String | t.Null),
  t.Key("address_2"): (t.String | t.Null),
  t.Key("state"): (t.String | t.Null),
  t.Key("city"): (t.String | t.Null),
  t.Key("zip_code"): (t.String | t.Null),
  t.Key("old_id"): t.Null,
  t.Key("last_login"): t.Null,
  t.Key("ts_addcard_email"): t.Null,
  t.Key("addcard_emails_tosend"): t.Null,
  t.Key("pledgecard_abandoned"): t.Int()
})

User_error = t.List[
  t.Dict({
    t.Key("field"): t.String,
    t.Key("message"): t.String
  })
]

Business_showcase = t.Dict({
  t.Key("id"): t.Int,
  t.Key("business_id"): t.Int,
  t.Key("location_name"): t.String,
  t.Key("old_business_id"): t.Null,
  t.Key("website_url"): (t.String | t.Null),
  t.Key("friendly_url"): t.String,
  t.Key("video"): (t.String | t.Null),
  t.Key("main_image_id"): (t.String | t.Null),
  t.Key("logo_image_id"): (t.String | t.Null),
  t.Key("short_description"): (t.String | t.Null),
  t.Key("why_local"): (t.String | t.Null),
  t.Key("our_story"): (t.String | t.Null),
  t.Key("short_impact"): t.String,
  t.Key("impact"): t.Null,
  t.Key("status"): t.Int,
  t.Key("ts_created"): t.String,
  t.Key("ts_updated"): t.String,
  t.Key("ts_published"): t.Null,
  t.Key("ts_success"): t.Null,
  t.Key("ts_closed"): t.Null,
  t.Key("keywords"): (t.String | t.Null),
  t.Key("show_hours"): t.Null,
  t.Key("year_founded"): t.Null,
  t.Key("facebook"): (t.String | t.Null),
  t.Key("google"): (t.String | t.Null),
  t.Key("twitter"): (t.String | t.Null),
  t.Key("instagram"): (t.String | t.Null),
  t.Key("youtube"): (t.String | t.Null),
  t.Key("pinterest"): (t.String | t.Null),
  t.Key("linkedin"): (t.String | t.Null),
  t.Key("location_address_1"): (t.String | t.Null),
  t.Key("location_address_2"): (t.String | t.Null),
  t.Key("location_city"): (t.String | t.Null),
  t.Key("location_state"): t.String,
  t.Key("location_zipcode"): t.String,
  t.Key("location_country"): (t.String | t.Null),
  t.Key("location_lat"): t.String,
  t.Key("location_long"): t.String,
  t.Key("location_phone"): t.String,
  t.Key("neighborhood"): t.Null,
  t.Key("team_pitch"): (t.String | t.Null),
  t.Key("team_image_id"): t.Null,
  t.Key("team_image_caption"): t.Null,
  t.Key("mainImage"): t.Null,
  t.Key("logoImage"): t.Null,
  t.Key("teamImage"): t.Null
})

program_type = t.Dict({
    t.Key("id"): t.Int,
    t.Key("business_id"): t.Int,
    t.Key("type"): t.Int,
    t.Key("default"): (t.Int | t.Null),
    t.Key("min_member_spend"): t.String,
    t.Key("max_members"): t.Int,
    t.Key("renewal_threshold"): t.String,
    t.Key("renewal_reward"): t.Null,
    t.Key("amount_trigger_min"): t.String,
    t.Key("cur_member_count"): t.Int,
    t.Key("cur_loyalty_capital"): t.String,
    t.Key("next_member_number"): t.Int
})

program = t.Dict({
    t.Key("id"): t.Int,
    t.Key("program_type_id"): t.Int,
    t.Key("program_name"): t.String,
    t.Key("business_id"): t.Int,
    t.Key("mute_receipts_fl"): t.Int,
    t.Key("old_business_id"): t.String(allow_blank=True),
    t.Key("type"): program_type
})


Business = t.Dict({
  t.Key("premium_features_flag"): t.Int,
  t.Key("id"): t.Int,
  t.Key("partner_id"): (t.Null | t.Int),
  t.Key("partner_business_id"): t.String,
  t.Key("business_name"): t.String,
  t.Key("business_type"): (t.Int | t.Null),
  t.Key("owner_user_id"): t.Int,
  t.Key("member_pay_fl"): t.Int,
  t.Key("mute_emails_fl"): (t.Int | t.Null),
  t.Key("business_contact_name"): t.String,
  t.Key("business_email"): t.Email,
  t.Key("business_phone"): t.String,
  t.Key("address_1"): (t.String | t.Null),
  t.Key("address_2"): (t.String | t.Null),
  t.Key("city"): (t.String | t.Null),
  t.Key("state"): t.String,
  t.Key("zipcode"): t.String,
  t.Key("country"): (t.String | t.Null),
  t.Key("contact_comment"): (t.String | t.Null),
  t.Key("tos_agreed"): (t.String | t.Null),
  t.Key("time_zone_utc"): t.Int,
  t.Key("processor_business_id"): t.Null,
  t.Key("processor_app_id"): t.String,
  t.Key("old_id"): t.Null,
  t.Key("old_owner"): t.Null,
  t.Key("tosAgreed"): t.Int,
  t.Key("processor"): t.Null,
  t.Key("showcase"): Business_showcase,
  t.Key("owner"): User,
  t.Key("zipcodeData"): t.Dict({
      t.Key("zip"): t.String,
      t.Key("city"): t.String,
      t.Key("state"): t.String,
      t.Key("type"): t.Null,
      t.Key("timezone"): t.Int,
      t.Key("latitude"): t.Float,
      t.Key("longitude"): t.Float,
      t.Key("dst"): t.Int
  }),
  t.Key("programs"): t.List(program),
  t.Key("hours"): t.List(t.String(allow_blank=True)),
  t.Key("purchase_tracking"): t.Bool,
  t.Key("processor_id"): (t.Int | t.Null)
})

Member = t.Dict({
  t.Key("renewal_reward"): t.String(allow_blank=True),
  t.Key("renewal_threshold"): t.Int,
  t.Key("phone"): t.String(allow_blank=True),
  t.Key("email"): t.Email,
  t.Key("first_name"): t.String(allow_blank=True),
  t.Key("last_name"): t.String(allow_blank=True),
  t.Key("active"): t.Int,
  t.Key("default_tip_perc"): t.Float,
  t.Key("business_id"): t.Int,
  t.Key("program_id"): t.Int,
  t.Key("zipcode"): t.String(allow_blank=True),
  t.Key("partner_user_id"): t.String,
  t.Key("partner_business_id"): t.String,
  t.Key("user_id"): t.Int,
  t.Key("auto_renew"): t.Int,
  t.Key("business_member_number"): t.Null,
  t.Key("ts_updated"): t.String,
  t.Key("member_since"): t.String,
  t.Key("security_code"): t.String,
  t.Key("id"): t.Int,
  t.Key("last_transaction_id"): (t.Int | t.Null),
  t.Key("tos_agreed"): t.Null,
  t.Key("total_spent"): t.Float,
  t.Key("nonpledged_total_spent"): t.Float,
  t.Key("auto_signup"): t.Int,
  t.Key("pace_fl"): (t.Int | t.Null),
  t.Key("pace_fl_standard"): (t.Int | t.Null),
  t.Key("business_note"): (t.String | t.Null),
  t.Key("member_pay_fl"): t.Int,
  t.Key("accum_visits"): t.Int,
  t.Key("accum_spend"): t.Float,
  t.Key("mute_receipts_fl"): t.Int,
  t.Key("pledged_total_spent"): t.Float,
  t.Key("member_pay_token", optional=True): t.String
})


Member_edited = t.Dict({
  t.Key("renewal_reward"): t.String(allow_blank=True),
  t.Key("renewal_threshold"): t.Int,
  t.Key("phone"): t.String(allow_blank=True),
  t.Key("email"): t.Email,
  t.Key("first_name"): t.String(allow_blank=True),
  t.Key("last_name"): t.String(allow_blank=True),
  t.Key("active"): t.Int,
  t.Key("default_tip_perc"): t.Float,
  t.Key("id"): t.Int,
  t.Key("business_id"): t.Int,
  t.Key("partner_business_id"): t.String,
  t.Key("program_id"): t.Int,
  t.Key("business_member_number"): t.Null,
  t.Key("user_id"): t.Int,
  t.Key("partner_user_id"): t.String,
  t.Key("last_transaction_id"): (t.Int | t.Null),
  t.Key("zipcode"): t.String(allow_blank=True),
  t.Key("tos_agreed"): t.Null,
  t.Key("ts_updated"): t.String,
  t.Key("member_since"): t.String,
  t.Key("auto_renew"): t.Int,
  t.Key("total_spent"): t.Float,
  t.Key("nonpledged_total_spent"): t.Float,
  t.Key("auto_signup"): t.Int,
  t.Key("pace_fl"): (t.Int | t.Null),
  t.Key("pace_fl_standard"): (t.Int | t.Null),
  t.Key("accum_visits"): t.Int,
  t.Key("accum_spend"): t.Float,
  t.Key("security_code"): t.String,
  t.Key("business_note"): (t.String | t.Null),
  t.Key("member_pay_fl"): t.Int,
  t.Key("mute_receipts_fl"): t.Int,
  t.Key("pledged_total_spent"): t.Float,
    "activePledge": t.Dict({
      t.Key("likely_to_spend"): t.Float,
      t.Key("status"): t.Int,
      t.Key("id"): t.Int,
      t.Key("member_id"): t.Int,
      t.Key("business_id"): t.Int,
      t.Key("user_id"): t.Int,
      t.Key("last_transaction_id"): (t.Null | t.Int),
      t.Key("pledged_amount"): t.Float,
      t.Key("pledge_total_spent"): t.Float,
      t.Key("nonpledged_total_spent"): t.Float,
      t.Key("pledge_total_visits"): (t.Null | t.Int),
      t.Key("rollover_amount"): t.Float,
      t.Key("ts_pledged"): t.String,
      t.Key("ts_pledged_utc"): t.String,
      t.Key("ts_updated"): t.String,
      t.Key("ts_closed"): (t.String | t.Null),
      t.Key("dt_pledge_fulfilled"): (t.String | t.Null),
      t.Key("ts_pledge_end_utc"): t.String,
      t.Key("ts_pledge_end"): t.String,
      t.Key("ts_renew_attempt"): (t.String | t.Null),
      t.Key("pledgedSpendDays"): t.Int,
      t.Key("pledgedSpendDate"): t.String,
      t.Key("suggestedSpend"): t.Float,
      t.Key("spentStatus"): t.Int
    })
})

member_error = t.Dict({
    t.Key("name"): t.String,
    t.Key("message"): t.String,
    t.Key("code"): t.Int,
    t.Key("status"): t.Int,
    t.Key("type"): t.String
})

transaction = t.List[t.Dict({
  t.Key("transaction"): t.Dict({
    t.Key("amount_tax"): t.Float,
    t.Key("amount_tip"): t.Float,
    t.Key("status"): t.Int,
    t.Key("transaction_datetime"): t.String,
    t.Key("member_id"): t.Int,
    t.Key("partner_id"): t.Int,
    t.Key("business_id"): t.Int,
    t.Key("user_id"): t.Int,
    t.Key("transaction_datetime_utc"): t.String,
    t.Key("total_amount"): t.Float,
    t.Key("amount"): t.Float,
    t.Key("paid_amount"): t.Float,
    t.Key("id"): t.Int,
    t.Key("status", optional=True): t.Int,
    t.Key("clover_id", optional=True): t.Int,
    t.Key("pledge_id", optional=True): t.Int,
    t.Key("linked_offer_id", optional=True): t.Int,
    t.Key("gc_offer_id", optional=True): t.Int,
    t.Key("transaction_type", optional=True): t.Int,
    t.Key("ts_created", optional=True): t.Int,
    t.Key("total_spent_todate", optional=True): t.Float,
    t.Key("sentby_user_id", optional=True): t.Int,
    t.Key("sentby_device_id", optional=True): t.Int,
    t.Key("is_inpledge", optional=True): t.Int,
    t.Key("is_renew_processed", optional=True): t.Int,
    t.Key("note", optional=True): t.String,
    t.Key("tnx_id_reversed", optional=True): t.Int,
    t.Key("tnx_id_reversedby", optional=True): t.Int,
    t.Key("tnx_id_tipadjusted", optional=True): t.Int,
    t.Key("tnx_id_tipadjustedby", optional=True): t.Int,
    t.Key("payments"): t.List[t.Dict({
      t.Key("payment"): t.Dict({
        t.Key("amount"): t.Float,
        t.Key("status"): t.Int,
        t.Key("user_id"): t.Int,
        t.Key("member_id"): t.Int,
        t.Key("business_id"): t.Int,
        t.Key("ts_created_utc"): t.String,
        t.Key("ts_created"): t.String,
        t.Key("transaction_id"): t.Int,
        t.Key("id"): t.Int,
        t.Key("paymentMethod"): (t.Int | t.Null),
        t.Key("isSettlement"): t.Bool
      }),
      t.Key("status"): t.Int,
      t.Key("message"): t.String(allow_blank=True),
      t.Key("code"): t.String(allow_blank=True)
    })]
  }),
  t.Key("status"): t.Int,
  t.Key("message"): t.String(allow_blank=True),
  t.Key("code"): t.String(allow_blank=True)
})]


transaction_not_completed = t.List[t.Dict({
  t.Key("transaction"): t.Dict({
    t.Key("amount_tax"): t.Float,
    t.Key("amount_tip"): t.Float,
    t.Key("status"): t.Int,
    t.Key("transaction_datetime"): t.String,
    t.Key("member_id"): (t.Int | t.Null),
    t.Key("partner_id"): t.Int,
    t.Key("business_id", optional=True): t.Int,
    t.Key("user_id", optional=True): t.Int,
    t.Key("transaction_datetime_utc", optional=True): t.String,
    t.Key("total_amount"): t.Float,
    t.Key("amount"): t.Float,
    t.Key("paid_amount", optional=True): t.Float,
    t.Key("id", optional=True): t.Int,
    t.Key("status", optional=True): t.Int,
    t.Key("clover_id", optional=True): t.Int,
    t.Key("pledge_id", optional=True): t.Int,
    t.Key("linked_offer_id", optional=True): t.Int,
    t.Key("gc_offer_id", optional=True): t.Int,
    t.Key("transaction_type", optional=True): t.Int,
    t.Key("ts_created", optional=True): t.Int,
    t.Key("total_spent_todate", optional=True): t.Float,
    t.Key("sentby_user_id",optional=True): t.Int,
    t.Key("sentby_device_id", optional=True): t.Int,
    t.Key("is_inpledge", optional=True): t.Int,
    t.Key("is_renew_processed", optional=True): t.Int,
    t.Key("note", optional=True): t.String,
    t.Key("tnx_id_reversed", optional=True): t.Int,
    t.Key("tnx_id_reversedby", optional=True): t.Int,
    t.Key("tnx_id_tipadjusted", optional=True): t.Int,
    t.Key("tnx_id_tipadjustedby", optional=True): t.Int,
    t.Key("payments"): t.List[t.Dict({
      t.Key("payment"): t.Dict({
        t.Key("amount"): t.Float,
        t.Key("status"): t.Int,
        t.Key("user_id", optional=True): t.Int,
        t.Key("member_id", optional=True): t.Int,
        t.Key("business_id", optional=True): t.Int,
        t.Key("ts_created_utc", optional=True): t.String,
        t.Key("ts_created", optional=True): t.String,
        t.Key("transaction_id", optional=True): t.Int,
        t.Key("id", optional=True): t.Int,
        t.Key("paymentMethod"): (t.Int | t.Null),
        t.Key("isSettlement"): t.Bool
      }),
      t.Key("status"): t.Int,
      t.Key("message"): t.String(allow_blank=True),
      t.Key("code"): t.String(allow_blank=True)
    })]
  }),
  t.Key("status"): t.Int,
  t.Key("message"): t.String(allow_blank=True),
  t.Key("code"): t.String(allow_blank=True)
})]


transaction_error = t.List[t.Dict({
  t.Key("field"): t.String,
  t.Key("message"): t.String
})]




